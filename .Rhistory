"Low" = 0,
"Medium" = 1,
"High" = 2))
freq_cols <- grep("^Frequency \\[", names(data), value = TRUE)
df_long_depr <- df_freq_depr %>%
select(all_of(c("Depression_num", freq_cols))) %>%
pivot_longer(cols = all_of(freq_cols),
names_to = "Genre",
values_to = "Frequency")
heat_df_depr <- df_long_depr %>%
group_by(Genre, Frequency) %>%
summarise(mean_depression = mean(Depression_num, na.rm = TRUE)) %>%
ungroup()
heat_df_depr <- heat_df_depr %>%
mutate(Genre_clean = gsub("Frequency \\[|\\]", "", Genre))
ggplot(heat_df, aes(x = Genre_clean, y = Frequency, fill = mean_depression)) +
geom_tile(color = "white") +
geom_text(aes(label = round(mean_depression, 2)), size = 3, color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkred", na.value = "grey80") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank()) +
labs(
title = "Średni poziom depresji vs słuchalność gatunków muzyki",
x = "Gatunek muzyki",
y = "Poziom słuchalności",
fill = "Średni poziom depresji"
)
df_freq_depr <- df_freq %>%
mutate(Depression_num = recode(Depression,
"Low" = 0,
"Medium" = 1,
"High" = 2))
freq_cols <- grep("^Frequency \\[", names(data), value = TRUE)
df_long_depr <- df_freq_depr %>%
select(all_of(c("Depression_num", freq_cols))) %>%
pivot_longer(cols = all_of(freq_cols),
names_to = "Genre",
values_to = "Frequency")
heat_df_depr <- df_long_depr %>%
group_by(Genre, Frequency) %>%
summarise(mean_depression = mean(Depression_num, na.rm = TRUE)) %>%
ungroup()
heat_df_depr <- heat_df_depr %>%
mutate(Genre_clean = gsub("Frequency \\[|\\]", "", Genre))
ggplot(heat_df_depr, aes(x = Genre_clean, y = Frequency, fill = mean_depression)) +
geom_tile(color = "white") +
geom_text(aes(label = round(mean_depression, 2)), size = 3, color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkred", na.value = "grey80") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank()) +
labs(
title = "Średni poziom depresji vs słuchalność gatunków muzyki",
x = "Gatunek muzyki",
y = "Poziom słuchalności",
fill = "Średni poziom depresji"
)
long_df_depr <- df_freq_depr %>%
select(starts_with("Frequency"), Depression) %>%
pivot_longer(
cols = starts_with("Frequency"),
names_to = "Genre",
values_to = "Frequency"
) %>%
filter(!is.na(Depression), !is.na(Frequency)) %>%
mutate(
Depression = case_when(
Depression == "Low" ~ 0,
Depression == "Medium" ~ 1,
Depression == "High" ~ 2,
TRUE ~ NA_real_
)
)
freq_df <- long_df %>%
group_by(Frequency) %>%
summarise(mean_depression = mean(Depression, na.rm = TRUE), .groups = "drop")
ggplot(freq_df, aes(x = Frequency, y = mean_depression, fill = Frequency)) +
geom_col(width = 0.6) +
geom_text(aes(label = round(mean_depression, 2)), vjust = -0.5, size = 4) +
scale_fill_brewer(palette = "Blues", direction = 1) +
ylim(0, 2) +
theme_minimal() +
theme(legend.position = "none") +
labs(
title = "Średni poziom depresji vs częstotliwość słuchania muzyki",
x = "Częstotliwość słuchania",
y = "Średni poziom depresji"
)
long_df_depr <- df_freq_depr %>%
select(starts_with("Frequency"), Depression) %>%
pivot_longer(
cols = starts_with("Frequency"),
names_to = "Genre",
values_to = "Frequency"
) %>%
mutate(
Depression = case_when(
Depression == "Low" ~ 0,
Depression == "Medium" ~ 1,
Depression == "High" ~ 2,
TRUE ~ NA_real_
)
)
freq_df <- long_df %>%
group_by(Frequency) %>%
summarise(mean_depression = mean(Depression, na.rm = TRUE), .groups = "drop")
ggplot(freq_df, aes(x = Frequency, y = mean_depression, fill = Frequency)) +
geom_col(width = 0.6) +
geom_text(aes(label = round(mean_depression, 2)), vjust = -0.5, size = 4) +
scale_fill_brewer(palette = "Blues", direction = 1) +
ylim(0, 2) +
theme_minimal() +
theme(legend.position = "none") +
labs(
title = "Średni poziom depresji vs częstotliwość słuchania muzyki",
x = "Częstotliwość słuchania",
y = "Średni poziom depresji"
)
long_df_depr <- df_freq_depr %>%
select(starts_with("Frequency"), Depression) %>%
pivot_longer(
cols = starts_with("Frequency"),
names_to = "Genre",
values_to = "Frequency"
) %>%
mutate(
Depression = case_when(
Depression == "Low" ~ 0,
Depression == "Medium" ~ 1,
Depression == "High" ~ 2
)
)
freq_df <- long_df %>%
group_by(Frequency) %>%
summarise(mean_depression = mean(Depression, na.rm = TRUE), .groups = "drop")
ggplot(freq_df, aes(x = Frequency, y = mean_depression, fill = Frequency)) +
geom_col(width = 0.6) +
geom_text(aes(label = round(mean_depression, 2)), vjust = -0.5, size = 4) +
scale_fill_brewer(palette = "Blues", direction = 1) +
ylim(0, 2) +
theme_minimal() +
theme(legend.position = "none") +
labs(
title = "Średni poziom depresji vs częstotliwość słuchania muzyki",
x = "Częstotliwość słuchania",
y = "Średni poziom depresji"
)
long_df_depr <- df_freq_depr %>%
select(starts_with("Frequency"), Depression) %>%
pivot_longer(
cols = starts_with("Frequency"),
names_to = "Genre",
values_to = "Frequency"
) %>%
mutate(
Depression = case_when(
Depression == "Low" ~ 0,
Depression == "Medium" ~ 1,
Depression == "High" ~ 2
)
)
freq_df_depr <- long_df_depr %>%
group_by(Frequency) %>%
summarise(mean_depression = mean(Depression, na.rm = TRUE), .groups = "drop")
ggplot(freq_df_depr, aes(x = Frequency, y = mean_depression, fill = Frequency)) +
geom_col(width = 0.6) +
geom_text(aes(label = round(mean_depression, 2)), vjust = -0.5, size = 4) +
scale_fill_brewer(palette = "Blues", direction = 1) +
ylim(0, 2) +
theme_minimal() +
theme(legend.position = "none") +
labs(
title = "Średni poziom depresji vs częstotliwość słuchania muzyki",
x = "Częstotliwość słuchania",
y = "Średni poziom depresji"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- readRDS("df_EDA.rds")
df <- readRDS("df.rds")
head(data)
glimpse(data)
df_freq <- data %>%
select(`Frequency [Classical]`:Depression)
df_freq_depr <- df_freq %>%
mutate(Depression_num = recode(Depression,
"Low" = 0,
"Medium" = 1,
"High" = 2))
freq_cols <- grep("^Frequency \\[", names(data), value = TRUE)
df_long_depr <- df_freq_depr %>%
select(all_of(c("Depression_num", freq_cols))) %>%
pivot_longer(cols = all_of(freq_cols),
names_to = "Genre",
values_to = "Frequency")
heat_df_depr <- df_long_depr %>%
group_by(Genre, Frequency) %>%
summarise(mean_depression = mean(Depression_num, na.rm = TRUE)) %>%
ungroup()
heat_df_depr <- heat_df_depr %>%
mutate(Genre_clean = gsub("Frequency \\[|\\]", "", Genre))
ggplot(heat_df_depr, aes(x = Genre_clean, y = Frequency, fill = mean_depression)) +
geom_tile(color = "white") +
geom_text(aes(label = round(mean_depression, 2)), size = 3, color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkred", na.value = "grey80") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank()) +
labs(
title = "Średni poziom depresji vs słuchalność gatunków muzyki",
x = "Gatunek muzyki",
y = "Poziom słuchalności",
fill = "Średni poziom depresji"
)
long_df_depr <- df_freq_depr %>%
select(starts_with("Frequency"), Depression) %>%
pivot_longer(
cols = starts_with("Frequency"),
names_to = "Genre",
values_to = "Frequency"
) %>%
mutate(
Depression = case_when(
Depression == "Low" ~ 0,
Depression == "Medium" ~ 1,
Depression == "High" ~ 2
)
)
freq_df_depr <- long_df_depr %>%
group_by(Frequency) %>%
summarise(mean_depression = mean(Depression, na.rm = TRUE), .groups = "drop")
ggplot(freq_df_depr, aes(x = Frequency, y = mean_depression, fill = Frequency)) +
geom_col(width = 0.6) +
geom_text(aes(label = round(mean_depression, 2)), vjust = -0.5, size = 4) +
scale_fill_brewer(palette = "Blues", direction = 1) +
ylim(0, 2) +
theme_minimal() +
theme(legend.position = "none") +
labs(
title = "Średni poziom depresji vs częstotliwość słuchania muzyki",
x = "Częstotliwość słuchania",
y = "Średni poziom depresji"
)
df_hours <- data %>%
select(`Frequency [Classical]`:`Frequency [Video game music]`, `Hours per day`)
freq_cols <- grep("^Frequency \\[", names(data), value = TRUE)
df_long_hours <- df_hours %>%
select(all_of(c("Hours per day", freq_cols))) %>%
pivot_longer(cols = all_of(freq_cols),
names_to = "Genre",
values_to = "Frequency")
heat_df_hours <- df_long_hours %>%
group_by(Genre, Frequency) %>%
summarise(mean_hours_per_day = mean(`Hours per day`, na.rm = TRUE)) %>%
ungroup()
heat_df_hours <- heat_df_hours %>%
mutate(Genre_clean = gsub("Frequency \\[|\\]", "", Genre))
ggplot(heat_df_hours, aes(x = Genre_clean, y = Frequency, fill = mean_hours_per_day)) +
geom_tile(color = "white") +
geom_text(aes(label = round(mean_hours_per_day, 2)), size = 3, color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkred", na.value = "grey80") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank()) +
labs(
title = "Średni liczba przesłuchanych godzin vs słuchalność gatunków muzyki",
x = "Gatunek muzyki",
y = "Poziom słuchalności",
fill = "Średnia liczba godzin"
)
long_df_hours <- df_hours %>%
select(starts_with("Frequency"), `Hours per day`) %>%
pivot_longer(
cols = starts_with("Frequency"),
names_to = "Genre",
values_to = "Frequency"
)
freq_df_hours <- long_df_hours %>%
group_by(Frequency) %>%
summarise(mean_hours_per_day = mean(`Hours per day`, na.rm = TRUE), .groups = "drop")
ggplot(freq_df_hours, aes(x = Frequency, y = mean_hours_per_day, fill = Frequency)) +
geom_col(width = 0.6) +
geom_text(aes(label = round(mean_hours_per_day, 2)), vjust = -0.5, size = 4) +
scale_fill_brewer(palette = "Blues", direction = 1) +
ylim(0, 5) +
theme_minimal() +
theme(legend.position = "none") +
labs(
title = "Średni liczba przesłuchanych godzin vs częstotliwość słuchania muzyki",
x = "Częstotliwość słuchania",
y = "Średnia liczba godzin"
)
long_freq_count <- data %>%
pivot_longer(cols = starts_with("Frequency ["),
names_to = "Genre",
values_to = "Frequency") %>%
mutate(Genre = str_remove_all(Genre, "Frequency \\[|\\]"))
heat_df_count <- long_freq_count %>%
count(Genre, Frequency)
ggplot(heat_df_count, aes(x = Genre, y = Frequency, fill = n)) +
geom_tile(color = "white") +
geom_text(aes(label = n), color = "black", size = 3) +
scale_fill_gradient(low = "lightyellow", high = "steelblue") +
theme_minimal() +
labs(
title = "Liczba obserwacji dla kombinacji Gatunek + Częstotliwość słuchania",
x = "Gatunek muzyki",
y = "Częstotliwość słuchania",
fill = "Liczba"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(heat_df_count, aes(x = Genre, y = Frequency, fill = n)) +
geom_tile(color = "white") +
geom_text(aes(label = n), color = "black", size = 3) +
scale_fill_gradient(low = "lightyellow", high = "steelblue") +
theme_minimal() +
labs(
title = "Liczba obserwacji dla kombinacji gatunku vs częstotliwości słuchania",
x = "Gatunek muzyki",
y = "Częstotliwość słuchania",
fill = "Liczba"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(discrim)
library(kernlab)
library(readxl)
library(MASS)
df <- read_xlsx("Minitoring_SBR_03b.xlsx", sheet = 1)
head(df)
df <- df %>%
select(Stage:Sensor_8, -`Time & Time`)
df <- df %>%
select(Stage:Sensor_8, -`Time & Time`)
df <- df %>%
dplyrr::select(Stage:Sensor_8, -`Time & Time`)
df <- df %>%
dplyr::select(Stage:Sensor_8, -`Time & Time`)
df$Stage <- as.factor(df$Stage)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(discrim)
library(kernlab)
library(readxl)
library(MASS)
df <- read_xlsx("Minitoring_SBR_03b.xlsx", sheet = 1)
head(df)
df <- df %>%
dplyr::select(Stage:Sensor_8, -`Time & Time`)
df$Stage <- as.factor(df$Stage)
glimpse(df)
sum(is.na(df))
df %>%
ggplot(aes(x = Stage, fill = Stage)) +
geom_bar() +
theme_minimal() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1))
set.seed(123)
split <- initial_split(df, prop = 0.5, strata = Stage)
train <- training(split)
test <- testing(split)
rec <- recipe(Stage ~., data = train) %>%
step_normalize(all_predictors())
lda_model <- discrim_linear() %>%
set_engine("MASS") %>%
set_mode("classification")
knn_model <- nearest_neighbor(neighbors = 5) %>%
set_engine("kknn") %>%
set_mode("classification")
#svm_model <- svm_linear() %>%
#set_engine("kernlab") %>%
#set_mode("classification")
rf_model <- rand_forest() %>%
set_engine("ranger") %>%
set_mode("classification")
models <- list(lda_model, knn_model, rf_model)
preproc <- list(rec = rec)
wflows <- workflow_set(preproc, models, cross = FALSE)
folds <- vfold_cv(train, v = 10)
keep_pred <- control_resamples(save_pred = TRUE, save_workflow = TRUE)
models_train <- wflows %>%
workflow_map("fit_resamples",
seed = 123, verbose = TRUE,
resamples = folds,
control = keep_pred)
collect_metrics(models_train)
saveRDS(models_train, "models.rds")
setwd("C:/Users/Jan-M/Desktop/Projekty/Music-MentalHealthDataAnalysis")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(patchwork)
library(scales)
colors <- c("#FFB300", "#803E75", "#FF6800", "#A6BDD7", "#C10020", "#CEA262", "#817066",
"#007D34", "#F6768E", "#00538A", "#FF7A5C", "#53377A", "#FF8E00", "#B32851",
"#F4C800", "#7F180D")
data <- readRDS("df_EDA.rds")
df <- readRDS("df.rds")
plot_distribution <- function(df, var, title, xlab, fill_colors = NULL){
df %>%
drop_na({{var}}) %>%
mutate({{var}} := fct_infreq({{var}})) %>%
ggplot(aes(x = {{var}}, fill = {{var}})) +
geom_bar() +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = title, x = xlab, y = "Liczba osób")
}
plot_boxplot <- function(df, xvar, yvar, title, xlab, ylab){
df %>%
drop_na({{yvar}}) %>%
mutate({{xvar}} := factor({{xvar}}, levels = c("Low", "Medium", "High"))) %>%
ggplot(aes(x = {{xvar}}, y = {{yvar}}, fill = {{xvar}})) +
geom_boxplot() +
theme_minimal() +
theme(legend.position = "none") +
labs(title = title, x = xlab, y = ylab)
}
plot_prop_bar <- function(df, fill_var, title, xlab, ylab, fill_lab){
df %>%
drop_na(Depression, {{fill_var}}) %>%
mutate(Depression = factor(Depression, levels = c("Low", "Medium", "High"))) %>%
group_by(Depression, {{fill_var}}) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Depression) %>%
mutate(prop = count / sum(count)) %>%
ggplot(aes(x = Depression, y = prop, fill = {{fill_var}})) +
geom_bar(stat = "identity", position = "stack") +
theme_minimal() +
labs(title = title, x = xlab, y = ylab, fill = fill_lab)
}
df %>%
ggplot(aes(x = Age)) +
geom_histogram(color = "blue", fill = "lightblue", bins = 40) +
labs(title = "Rozkład wieku słuchacza", x = "Wiek słuchacza", y = "Liczba osób")
df %>%
mutate(Depression = factor(case_when(Depression <= 3 ~ "Low", Depression > 3 & Depression < 7 ~ "Medium", Depression >= 7 ~ "High"),
levels = c("Low", "Medium", "High"), ordered = TRUE)) %>%
ggplot(aes(x = Depression, y = Age, fill = Depression)) +
geom_boxplot() +
theme_minimal() +
theme(legend.position = "none") +
labs(title = "Związek między wiekiem słuchającego a poziomem depresji", x = "Poziom depresji", y = "Wiek słuchacza")
plot_distribution(data, `Primary streaming service`, "Rozkład preferowanego serwisu streamingowego", "Preferowany serwis streamingowy")
plot_prop_bar(data, `Primary streaming service`, "Proporcje platform streamingowych wg poziomu depresji", "Poziom depresji", "Udział", "Platforma streamingowa")
data %>%
ggplot(aes(x = `Hours per day`)) +
geom_histogram(color = "blue", fill = "lightblue", bins = 24) +
theme_minimal() +
labs(title = "Rozkład dziennego czasu słuchania muzyki", x = "Liczba godzin", y = "Liczba osób")
plot_boxplot(data, Depression, `Hours per day`, "Związek między liczbą przesłuchanych godzin a poziomem depresji", "Poziom depresji", "Liczba godzin")
plot_distribution(data, `Fav genre`, "Rozkład ulubionego gatunku muzycznego", "Ulubiony gatunek muzyczny", fill_colors = colors)
plot_prop_bar(data, `Fav genre`, "Proporcje ulubionego gatunku wg poziomu depresji", "Poziom depresji", "Udział", "Gatunek")
data %>%
drop_na(BPM) %>%
filter(BPM < 500) %>%
ggplot(aes(x = BPM)) +
geom_histogram(color = "blue", fill = "lightblue", bins = 22) +
theme_minimal() +
labs(title = "Rozkład liczby uderzeń na minutę (BPM)", x = "Liczba uderzeń na minutę", y = "Liczba osób")
plot_boxplot(data %>% filter(BPM < 500), Depression, BPM, "Związek między BPM ulubionego gatunku a poziomem depresji", "Poziom depresji", "Uderzenia na minutę (BPM)")
plot_distribution(data, `While working`, "Rozkład słuchania muzyki podczas pracy/nauki", "Słuchanie podczas pracy/nauki")
plot_prop_bar(data, `While working`, "Proporcje słuchania muzyki podczas pracy/nauki wg poziomu depresji", "Poziom depresji", "Udział", "Słuchanie podczas pracy/nauki")
plot_distribution(data, Instrumentalist, "Rozkład gry na instrumencie", "Regularne granie na instrumencie")
plot_prop_bar(data, Instrumentalist, "Proporcje gry na instrumencie wg poziomu depresji", "Poziom depresji", "Udział", "Gra na instrumencie")
plot_distribution(data, Composer, "Rozkład komponowania muzyki", "Komponowanie muzyki")
plot_prop_bar(data, Composer, "Proporcje komponowania muzyki wg poziomu depresji", "Poziom depresji", "Udział", "Komponowanie muzyki")
plot_distribution(data, Exploratory, "Rozkład eksplorowania artystów/gatunków", "Eksplorowanie artystów/gatunków")
plot_prop_bar(data, Exploratory, "Proporcje eksplorowania artystów/gatunków wg depresji", "Poziom depresji", "Udział", "Eksplorowanie")
plot_distribution(data, `Foreign languages`, "Rozkład słuchania w obcym języku", "Słuchanie w obcym języku")
plot_prop_bar(data, `Foreign languages`, "Proporcje słuchania w obcym języku wg depresji", "Poziom depresji", "Udział", "Słuchanie w obcym języku")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
library(Metrics)
library(mice)
library(VIM)
data <- readRDS("df_EDA.rds")
df <- readRDS("df.rds")
df <- df %>%
mutate(Depression = case_when(Depression <= 3 ~ "Low",
Depression > 3 & Depression < 7 ~ "Medium",
Depression >= 7 ~ "High"),
Depression = factor(Depression, levels = c("Low", "Medium", "High")))
head(df)
sum(is.na(df))
colSums(is.na(df))
df$Depression
md.pattern(df, rotate.names = TRUE)
aggr(df)
df_sorted <- df[order(df$BPM, decreasing = TRUE), ]
df_sorted
df <- df[df$BPM <= 300, ] # tego nie będzie tu ale nie chce mi się teraz tego przerzucać
genre_means <- aggregate(BPM ~ `Fav genre`, data = df, FUN = function(x) round(mean(x[x > 0], na.rm = TRUE), 0))
genre_means
idx <- which(is.na(df$BPM))
set.seed(123)
m <- rnorm(length(idx), mean = 1, sd = 0.05)
values <- numeric(length(idx))
for (j in 1:107) {
genre <- df$`Fav genre`[idx[j]]
base <- means[genre][[1]]
if (!is.na(base)) {
values[j] <- base * m[j]
} else {
values[j] <- NA
}
}
